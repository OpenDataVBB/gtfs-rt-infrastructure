# {{ ansible_managed }}

[Unit]
After=syslog.target network.target nats-server.service

[Service]
# ExecStart=/usr/bin/node cli.js AUS
# Here, we specify a hard limit on when the VDV-454 AUS subscription(s) should expire. This should actually be solved within vdv-453-nats-adapter!
# see also https://github.com/OpenDataVBB/vdv-453-nats-adapter/issues/2
# We use run.sh to pass in `--expires "$(date --iso-8601=seconds --date="@$(echo "{{ vdv_453_nats_adapter_aus_subscription_ttl }} + $(date '+%s')" | bc)")"`, which needs a real shell to be evaluated.
# We also tell systemd to force-restart the service after the subscription has expired.
ExecStart={{ vdv_453_nats_adapter_dir }}/run.sh
RuntimeMaxSec={{ vdv_453_nats_adapter_aus_subscription_ttl + 15 }}s
Environment=VDV_454_AUS_SUBSCRIPTION_TTL={{ vdv_453_nats_adapter_aus_subscription_ttl }}

Restart=always
RestartSec=10s
RestartMaxDelaySec=15m
RestartSteps=30
WorkingDirectory={{ vdv_453_nats_adapter_dir }}
Environment=NODE_ENV=production
Environment=VDV_453_LEITSTELLE="{{ vdv_453_our_leitstellenkennung }}"
Environment=VDV_453_THEIR_LEITSTELLE="{{ vdv_453_their_leitstellenkennung }}"
Environment=VDV_453_ENDPOINT="http://{{ vdv_453_api_host }}:{{ vdv_453_api_port }}/"
# > Port to listen on. VDV-453 requires the *client* to run an HTTP server that the VDV-453 API can call.
Environment=PORT="{{ vdv_453_nats_adapter_internal_port }}"
Environment=NATS_SERVERS="{{ vdv_453_nats_adapter_nats_servers | join(',') }}"
# todo: NATS_CLIENT_NAME
# todo: let it resubscribe before expiry?
Environment=METRICS_SERVER_PORT="{{ vdv_453_nats_adapter_metrics_server_port }}"

[Install]
WantedBy=multi-user.target
