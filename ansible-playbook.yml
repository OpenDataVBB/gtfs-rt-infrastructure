---
- name: basic system setup
  hosts: all
  roles:
    - role: geerlingguy.security
      vars:
        security_fail2ban_enabled: true
      become: true
  tasks:
    # todo:
    # apt update
    # apt upgrade -y
    # apt autoremove -y
    # do-release-upgrade # todo: unattended
    #   https://www.jeffgeerling.com/blog/2018/ansible-playbook-upgrade-all-ubuntu-1204-lts-hosts-1404-or-1604-1804-etc
    # unattended upgrades
    # sudo apt install -y net-tools
    # todo: vpn
    # https://sysadmins.co.za/setup-a-site-to-site-ipsec-vpn-with-strongswan-on-ubuntu/
    #   https://docs.strongswan.org/docs/5.9/howtos/introduction.html#_configuration_files

    - name: configure journald to persist logs
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?Storage\b
        line: Storage=persistent
      become: true
    - name: configure journald to compress logs
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?Compress\b
        line: Compress=yes
      become: true
    - name: configure journald to store at most 10GB of logs
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?SystemMaxUse\b
        line: SystemMaxUse=10G
      become: true
    - name: configure journald to store at most 10GB of logs
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?SystemMaxUse\b
        line: RuntimeMaxUse=10G
      become: true
    - name: configure journald to keep 2GB free
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?SystemKeepFree\b
        line: SystemKeepFree=2G
      become: true
    - name: configure journald to keep 2GB free
      lineinfile:
        path: /etc/systemd/journald.conf
        regex: ^(# *)?RuntimeKeepFree\b
        line: RuntimeKeepFree=2G
      become: true
    - name: enable & start journald
      ansible.builtin.shell: |
        systemctl daemon-reload
        systemctl restart systemd-journald
      become: true

    # configure firewall
    - name: put fail2ban config
      ansible.builtin.copy:
        src: lib/fail2ban-jail.local
        dest: /etc/fail2ban/jail.local
      become: true
    - name: reload & restart fail2ban
      ansible.builtin.shell: |
        fail2ban-client reload
        fail2ban-client restart
      become: true
    - name: let UFW deny everything
      community.general.ufw:
        policy: deny
      become: true
    - name: let UFW allow rate-limited SSH
      community.general.ufw:
        rule: limit
        name: OpenSSH
      become: true
    - name: let UFW allow IPSec/IKEv2 connections on ens4 from {{ their_vpn_gateway_ip }}/32
      community.general.ufw:
        policy: allow
        direction: incoming
        interface: ens4
        name: IPSec
        from_ip: '{{ their_vpn_gateway_ip }}/32'
      become: true
    - name: let UFW allow IPSec/IKEv2 connections on ens4 to {{ their_vpn_gateway_ip }}/32
      community.general.ufw:
        policy: allow
        direction: outgoing
        interface: ens4
        name: IPSec
        to_ip: '{{ their_vpn_gateway_ip }}/32'
      become: true
    - name: let UFW allow VPN-internal traffic on ens4 from {{ their_vpn_ip }}/32
      community.general.ufw:
        policy: allow
        direction: incoming
        interface: ens4
        from_ip: '{{ their_vpn_ip }}/32'
      become: true
    - name: let UFW allow VPN-internal traffic on ens4 to {{ their_vpn_ip }}/32
      community.general.ufw:
        policy: allow
        direction: outgoing
        interface: ens4
        to_ip: '{{ their_vpn_ip }}/32'
      become: true
    - name: enable UFW
      community.general.ufw:
        state: enabled
      become: true

    # configure StrongSwan IPSec VPN
    - name: assign VPN-internal IP address to network interface
      ansible.builtin.template:
        src: templates/netplan-hacon-datendrehscheibe-cisco-asa.yaml.j2
        dest: /etc/netplan/60-hacon-datendrehscheibe-cisco-asa.yaml
      become: true
    - name: netplan apply
      ansible.builtin.shell: netplan apply
      become: true

    - name: patch strongswan-starter systemd service to load all connections
      ansible.builtin.copy:
        dest: /etc/systemd/system/strongswan-starter.service.d/override.conf
        content: |
          [Service]
          ExecStartPost=/bin/sh -c 'sleep 3; /usr/sbin/swanctl --load-all'
      become: true
    - name: configure site-to-site VPN using StrongSwan
      ansible.builtin.template:
        src: templates/strongswan-hacon-datendrehscheibe-cisco-asa.conf.j2
        dest: /etc/swanctl/conf.d/hacon-datendrehscheibe-cisco-asa.conf
      become: true
    - name: restart strongswan-starter systemd service
      ansible.builtin.shell: |
        systemctl daemon-reload
        systemctl restart strongswan-starter
      become: true

    - name: check if HaCon Datendrehscheibe can be ping-ed
      ansible.builtin.shell: |
        ping -w3 -c1 -q "{{ their_vpn_ip }}"
